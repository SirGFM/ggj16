diff -ruN android-project/AndroidManifest.xml android-project-new/AndroidManifest.xml
--- android-project/AndroidManifest.xml	2014-03-15 23:31:45.000000000 -0300
+++ android-project-new/AndroidManifest.xml	2016-02-04 21:27:49.547682100 -0200
@@ -1,31 +1,21 @@
 <?xml version="1.0" encoding="utf-8"?>
-<!-- Replace org.libsdl.app with the identifier of your game below, e.g.
-     com.gamemaker.game
--->
+
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-      package="org.libsdl.app"
+      package="com.gfmgamecorner.witchs_spell"
       android:versionCode="1"
       android:versionName="1.0"
       android:installLocation="auto">
 
-    <!-- Create a Java class extending SDLActivity and place it in a
-         directory under src matching the package, e.g.
-         	src/com/gamemaker/game/MyGame.java
-
-         then replace "SDLActivity" with the name of your class (e.g. "MyGame")
-         in the XML below.
-
-         An example Java class can be found in README-android.txt
-    -->
     <application android:label="@string/app_name"
                  android:icon="@drawable/ic_launcher"
                  android:allowBackup="true"
-                 android:theme="@android:style/Theme.NoTitleBar.Fullscreen"
-                 android:hardwareAccelerated="true" >
-        <activity android:name="SDLActivity"
+                 android:theme="@android:style/Theme.NoTitleBar.Fullscreen" >
+<!-- Unsupported attribute for 2.3.X -->
+<!--                 android:hardwareAccelerated="true" > -->
+        <activity android:name="Witchs_Spell"
                   android:label="@string/app_name"
                   android:configChanges="keyboardHidden|orientation"
-                  >
+				  android:screenOrientation="landscape">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
                 <category android:name="android.intent.category.LAUNCHER" />
@@ -34,7 +24,7 @@
     </application>
 
     <!-- Android 2.3.3 -->
-    <uses-sdk android:minSdkVersion="10" android:targetSdkVersion="12" />
+    <uses-sdk android:minSdkVersion="10" android:targetSdkVersion="10" />
 
     <!-- OpenGL ES 2.0 -->
     <uses-feature android:glEsVersion="0x00020000" /> 
diff -ruN android-project/default.properties android-project-new/default.properties
--- android-project/default.properties	2014-03-15 23:31:45.000000000 -0300
+++ android-project-new/default.properties	2016-02-04 21:27:49.548252100 -0200
@@ -8,4 +8,4 @@
 # project structure.
 
 # Project target.
-target=android-12
+target=android-10
diff -ruN android-project/jni/src/Android.mk android-project-new/jni/src/Android.mk
--- android-project/jni/src/Android.mk	2014-03-15 23:31:45.000000000 -0300
+++ android-project-new/jni/src/Android.mk	2016-02-04 21:28:05.760013100 -0200
@@ -4,16 +4,29 @@
 
 LOCAL_MODULE := main
 
-SDL_PATH := ../SDL
+SDL_PATH := $(LOCAL_PATH)/../SDL2-2.0.3
 
-LOCAL_C_INCLUDES := $(LOCAL_PATH)/$(SDL_PATH)/include
+LOCAL_C_INCLUDES := $(LOCAL_PATH)/../../include $(LOCAL_PATH)/../../../../include
 
 # Add your application source files here...
 LOCAL_SRC_FILES := $(SDL_PATH)/src/main/android/SDL_android_main.c \
-	YourSourceHere.c
+        $(LOCAL_PATH)/../../../../src/assets.c \
+        $(LOCAL_PATH)/../../../../src/cauldron.c \
+        $(LOCAL_PATH)/../../../../src/collision.c \
+        $(LOCAL_PATH)/../../../../src/config.c \
+        $(LOCAL_PATH)/../../../../src/gamestate.c \
+        $(LOCAL_PATH)/../../../../src/gesture.c \
+        $(LOCAL_PATH)/../../../../src/global.c \
+        $(LOCAL_PATH)/../../../../src/input.c \
+        $(LOCAL_PATH)/../../../../src/main.c \
+        $(LOCAL_PATH)/../../../../src/object.c \
+        $(LOCAL_PATH)/../../../../src/recipeScroll.c \
+        $(LOCAL_PATH)/../../../../src/scrollItem.c \
+        $(LOCAL_PATH)/../../../../src/type.c
 
-LOCAL_SHARED_LIBRARIES := SDL2
+LOCAL_SHARED_LIBRARIES := SDL2 GFraMe CSynth
 
+LOCAL_CFLAGS := -DGFRAME_MOBILE -DALIGN=4
 LOCAL_LDLIBS := -lGLESv1_CM -lGLESv2 -llog
 
 include $(BUILD_SHARED_LIBRARY)
diff -ruN android-project/project.properties android-project-new/project.properties
--- android-project/project.properties	2014-03-15 23:31:45.000000000 -0300
+++ android-project-new/project.properties	2016-02-04 21:27:49.549292200 -0200
@@ -11,4 +11,4 @@
 #proguard.config=${sdk.dir}/tools/proguard/proguard-android.txt:proguard-project.txt
 
 # Project target.
-target=android-12
+target=android-10
diff -ruN android-project/res/values/strings.xml android-project-new/res/values/strings.xml
--- android-project/res/values/strings.xml	2014-03-15 23:31:45.000000000 -0300
+++ android-project-new/res/values/strings.xml	2016-02-04 21:27:49.549969400 -0200
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources>
-    <string name="app_name">SDL App</string>
+    <string name="app_name">Witch's Spell</string>
 </resources>
diff -ruN android-project/src/org/libsdl/app/SDLActivity.java android-project-new/src/org/libsdl/app/SDLActivity.java
--- android-project/src/org/libsdl/app/SDLActivity.java	2014-03-15 23:31:45.000000000 -0300
+++ android-project-new/src/org/libsdl/app/SDLActivity.java	2016-02-04 21:27:49.551296400 -0200
@@ -47,6 +47,8 @@
     // Load the .so
     static {
         System.loadLibrary("SDL2");
+        System.loadLibrary("GFraMe");
+        System.loadLibrary("CSynth");
         //System.loadLibrary("SDL2_image");
         //System.loadLibrary("SDL2_mixer");
         //System.loadLibrary("SDL2_net");
@@ -84,12 +86,7 @@
         // Set up the surface
         mSurface = new SDLSurface(getApplication());
         
-        if(Build.VERSION.SDK_INT >= 12) {
-            mJoystickHandler = new SDLJoystickHandler_API12();
-        }
-        else {
-            mJoystickHandler = new SDLJoystickHandler();
-        }
+        mJoystickHandler = new SDLJoystickHandler();
 
         mLayout = new AbsoluteLayout(this);
         mLayout.addView(mSurface);
@@ -542,10 +539,6 @@
         mDisplay = ((WindowManager)context.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
         mSensorManager = (SensorManager)context.getSystemService(Context.SENSOR_SERVICE);
         
-        if(Build.VERSION.SDK_INT >= 12) {
-            setOnGenericMotionListener(new SDLGenericMotionListener_API12());
-        }
-
         // Some arbitrary defaults to avoid a potential division by zero
         mWidth = 1.0f;
         mHeight = 1.0f;
@@ -937,138 +930,5 @@
 }
 
 /* Actual joystick functionality available for API >= 12 devices */
-class SDLJoystickHandler_API12 extends SDLJoystickHandler {
-  
-    class SDLJoystick {
-        public int device_id;
-        public String name;
-        public ArrayList<InputDevice.MotionRange> axes;
-        public ArrayList<InputDevice.MotionRange> hats;
-    }
-    class RangeComparator implements Comparator<InputDevice.MotionRange>
-    {
-        @Override
-        public int compare(InputDevice.MotionRange arg0, InputDevice.MotionRange arg1) {
-            return arg0.getAxis() - arg1.getAxis();
-        }
-    }
-    
-    private ArrayList<SDLJoystick> mJoysticks;
-    
-    public SDLJoystickHandler_API12() {
-       
-        mJoysticks = new ArrayList<SDLJoystick>();
-    }
-
-    @Override
-    public void pollInputDevices() {
-        int[] deviceIds = InputDevice.getDeviceIds();
-        // It helps processing the device ids in reverse order
-        // For example, in the case of the XBox 360 wireless dongle,
-        // so the first controller seen by SDL matches what the receiver
-        // considers to be the first controller
-        
-        for(int i=deviceIds.length-1; i>-1; i--) {
-            SDLJoystick joystick = getJoystick(deviceIds[i]);
-            if (joystick == null) {
-                joystick = new SDLJoystick();
-                InputDevice joystickDevice = InputDevice.getDevice(deviceIds[i]);
-                if( (joystickDevice.getSources() & InputDevice.SOURCE_CLASS_JOYSTICK) != 0) {
-                    joystick.device_id = deviceIds[i];
-                    joystick.name = joystickDevice.getName();
-                    joystick.axes = new ArrayList<InputDevice.MotionRange>();
-                    joystick.hats = new ArrayList<InputDevice.MotionRange>();
-                    
-                    List<InputDevice.MotionRange> ranges = joystickDevice.getMotionRanges();
-                    Collections.sort(ranges, new RangeComparator());
-                    for (InputDevice.MotionRange range : ranges ) {
-                        if ((range.getSource() & InputDevice.SOURCE_CLASS_JOYSTICK) != 0 ) {
-                            if (range.getAxis() == MotionEvent.AXIS_HAT_X ||
-                                range.getAxis() == MotionEvent.AXIS_HAT_Y) {
-                                joystick.hats.add(range);
-                            }
-                            else {
-                                joystick.axes.add(range);
-                            }
-                        }
-                    }
-                    
-                    mJoysticks.add(joystick);
-                    SDLActivity.nativeAddJoystick(joystick.device_id, joystick.name, 0, -1, 
-                                                  joystick.axes.size(), joystick.hats.size()/2, 0);
-                }
-            }
-        }
-        
-        /* Check removed devices */
-        ArrayList<Integer> removedDevices = new ArrayList<Integer>();
-        for(int i=0; i < mJoysticks.size(); i++) {
-            int device_id = mJoysticks.get(i).device_id;
-            int j;
-            for (j=0; j < deviceIds.length; j++) {
-                if (device_id == deviceIds[j]) break;
-            }
-            if (j == deviceIds.length) {
-                removedDevices.add(device_id);
-            }
-        }
-            
-        for(int i=0; i < removedDevices.size(); i++) {
-            int device_id = removedDevices.get(i);
-            SDLActivity.nativeRemoveJoystick(device_id);
-            for (int j=0; j < mJoysticks.size(); j++) {
-                if (mJoysticks.get(j).device_id == device_id) {
-                    mJoysticks.remove(j);
-                    break;
-                }
-            }
-        }        
-    }
-    
-    protected SDLJoystick getJoystick(int device_id) {
-        for(int i=0; i < mJoysticks.size(); i++) {
-            if (mJoysticks.get(i).device_id == device_id) {
-                return mJoysticks.get(i);
-            }
-        }
-        return null;
-    }   
-    
-    @Override        
-    public boolean handleMotionEvent(MotionEvent event) {
-        if ( (event.getSource() & InputDevice.SOURCE_JOYSTICK) != 0) {
-            int actionPointerIndex = event.getActionIndex();
-            int action = event.getActionMasked();
-            switch(action) {
-                case MotionEvent.ACTION_MOVE:
-                    SDLJoystick joystick = getJoystick(event.getDeviceId());
-                    if ( joystick != null ) {
-                        for (int i = 0; i < joystick.axes.size(); i++) {
-                            InputDevice.MotionRange range = joystick.axes.get(i);
-                            /* Normalize the value to -1...1 */
-                            float value = ( event.getAxisValue( range.getAxis(), actionPointerIndex) - range.getMin() ) / range.getRange() * 2.0f - 1.0f;
-                            SDLActivity.onNativeJoy(joystick.device_id, i, value );
-                        }          
-                        for (int i = 0; i < joystick.hats.size(); i+=2) {
-                            int hatX = Math.round(event.getAxisValue( joystick.hats.get(i).getAxis(), actionPointerIndex ) );
-                            int hatY = Math.round(event.getAxisValue( joystick.hats.get(i+1).getAxis(), actionPointerIndex ) );
-                            SDLActivity.onNativeHat(joystick.device_id, i/2, hatX, hatY );
-                        }
-                    }
-                    break;
-                default:
-                    break;
-            }
-        }
-        return true;
-    }            
-}
-
-class SDLGenericMotionListener_API12 implements View.OnGenericMotionListener {
-    // Generic Motion (mouse hover, joystick...) events go here
-    // We only have joysticks yet
-    @Override
-    public boolean onGenericMotion(View v, MotionEvent event) {
-        return SDLActivity.handleJoystickMotionEvent(event);
-    }
-}
+/*
+*/
